----- MySQL Configuration

• datadir=/var/lib/mysql
• port=3306
• socket=/tmp/mysql.sock
• user=mysql
• log-bin=mysql1-bin
• log-error=/var/log/mysqld.log
• pid-file=/var/run/mysqld/mysqld.pid

Installation

	Initialize
	Start mysqld
	Change auto generated password
	Connect MySQL
	
--- Demo 

sudo su
sudo apt-get install gedit
cd /opt
tar xf /home/oem/Downloads/mysql-5.7.29-linux-glibc2.12-x86_64.tar.gz mkdir /usr/local/mysql

chmod 764 /usr/local/mysql
ln -s /opt/mysql-5.7.29-linux-glibc2.12-x86_64/* /usr/local/mysql   		*/

gedit ~/.bashrc

export PATH=$PATH:/usr/local/mysql/bin

source ~/.bashrc

adduser system mysql
mkdir /var/lib/mysql
chown mysql /var/lib/mysql
mkdir /var/run/mysqld
chmod 777 /var/run/mysqld
chmod 777 /var/log
ls -l /var/log

gedit /etc/my.cnf

[mysqld]

datadir=/var/lib/mysql
port=3306
socket=/tmp/mysql.sock
user=mysql
server-id=1								<---- You can give any number
log-bin-mysql1-bin
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

EOF


mysqld --initialize						: Initializes the folder. If you get error related to lib, run cmd below
sudo apt-get install libaiol libaio-dev

Mysqld --initialize

cat /var/log/mysqld.log
....
2020-02-17T18:55:32.4911472 0 [Warning] CA certificate ca.pem is self signed.
2020-02-17T18:55:32.789606Z 1 [Note] A temporary password is generated for root@localhost:,bxk&kSo*otg  <---- a temp password is generated in log file

EOF

mysqld &
[1] 6547

ps -ef | grep mysqld
mysql	6547 6015 2 00:26 pts/0 00:00:00 mysqld
root	6576 6015 0 00:26 pts/0 00:00:00 grep -color=auto	mysqld

# mysqladmin -u root -p password    <---- Change the root password

Connect to mysql using :

# mysql -u root -p				<---- You'll need to enter the pwd
# mysql -u root -pnewpdw		<---- specify the password in the line

mysql> status

#mysqladmin -S/tmp/mysql.sock -p password <-- -S/tmp/mysql.sock specifies the socket file if we don't want the default


----------- SYSTEM Databases
	mysql				: contains users, logs, ...
	sys					: system infos (session, process, waits, mem ...)
	performance_schema	: sys performance infos. Not all tables collect dtata by default
	information_schema	: temporary db
	
Default engines 

	MyISAM
	CSV
	PERFORMANCE_SCHEMA
	BLACKHOLE
	MEMORY
	InnoDB			<-- Default
	ARCHIVE
	MRG_MYISAM
	FEDERATED

Default Files

• auto.cnf
	MySQL 5.6 -auto generated -important for GTID and uniquely identify server

• Ibtmp1
	ibtmp1 is a temporary working file for MySQL.
	When you turn the MySQL server off and on again the file is deleted and the server runs again without issue 
	until the file becomes too large again

• mysql.pid
	MySQL Process Id

• mysqld.log
	Log file mysqld

• ibdata1

	➤ System tablespace for innodb
	➤ Table data pages
	➤ Table Index pages
	➤ MVCC Control data

• Redo Logs

	➤ ib_logfile1
	➤ ib_logfile0

---- Demo

mysql> show databases;
mysql> use mysql
mysql> show tables;
mysql> select * from user \G    : / default users : root, mysql.sys, mysql.session

mysql> create database db1;

mysql> use dbl
Database changed

mysql> create table tblinnodb (id int);
Query OK, 0 rows affected (1.65 sec)

mysql>

root@oem-VirtualBox:/home/oem# ls /var/lib/mysql/dbl
db.opt tblinnodb.frm tblinnodb.ibd

	.frm : contains the schema of the table
	.idb : contains datas and indexes

mysql> create table tbMyISAM(id int) engine=MYISAM; 

# ls /var/lib/mysql/dbl
db.opt tblinnodb.frm tblinnodb.ibd tbMyISAM.frm tbMyISAM.MYD tbMyISAM.MYI

	.frm : contains the schema of the table  (.isd for recent mysql releases)
	.MYD : contains datas
	.MYI : contains indexes

mysql> create table tblMemory(id int) engine=MEMORY;

# ls /var/lib/mysql/dbl
db.opt tblinnodb.frm tblinnodb.ibd	tblMemory.frm tbMyISAM.frm tbMyISAM.MYD tbMyISAM.MYI

mysql> create table tblCSV(id int not null) engine=CSV;

# ls /var/lib/mysql/dbl/tblcsv*
tblcsv.CSV	tblcsv.CSM tblCSV.frm

----------------- Tablespaces 

mysql> use dbl;
Database changed 

mysql> select database();
 database() 
--+

| dbl

+


mysql> prompt \d>   <----- Change the prompt to indicate database we are connected to
PROMPT set to '\d>'
dbl>

db1>CREATE TABLESPACE myspace add datafile 'myspace.ibd';

# ls /var/lib/mysql
myspace.ibd				<---- Name of the tablespace file

db1>Create table test2(id int) TABLESPACE=myspace;

# ls /var/lib/mysql/dbl/test2*
test2.frm						<---- .ibd file not created as located in the tbs file myspace.ibd

NB: If you create yiur tbs in another localtion, in db directory, you will see a file with <tablespace name>.isl,
which is a symbolic link to the tablespace file

db1>CREATE TABLE Test4(id int) DATA DIRECTORY='/data';

# ls /data
db1 mysecspace.ibd

# ls /data/dbl
Test4.ibd

# ls /var/lib/mysql/dbl/Test4*
Test4.frm Test4.isl

# cat /var/lib/mysql/db1/Test4.isl
/data/db1/Test4.ibd

db1>show create table Test4\G


------- Backup and Restore

Create a new instance :

$vi /etc/my2.cnf

[mysqld]

datadir=/mysql
port=3307
socket=/mysql/mysql.sock
user=mysql
server- server-id=2
log-bin=/mysql/mysql1-bin
log-error=/mysql/mysqld.log
pid-file=/mysql/mysqld.pid

EOF


$ sudo su
# mkdir /mysql
# chown mysql /mysql
# mkdir /backup
# chmod 764 /mysql
# mysqld --defaults-file=/etc/my2.cnf -initialize

# ls /mysql
	auto.cnf 
	client-key.pem
	ib_logfilel
	ca-key.pem
	ib_buffer_pool
	ibtmpl
	ca.pem
	ibdatal
	mysql
	client-cert.pem
	ib_logfile0
	mysqll-bin.000001
	mysql1-bin.index
	public_key.pem
	mysqld.log				<--- mysql daemon process log which contains temporary pwd for root mysql
	server-cert.pem
	performance_schema
	server-key.pem
	private_key.pem
	sys

# mysqld --defaults-file=/etc/my2.cnf &  <--- Start mysql in backend

$ps -ef|grep mysqld
mysql	2295	2242	0 	13:08 	?	 	00:00:05 	mysqld
mysql	3705	3609 	2 	16:03 	pts/4	00:00:00	mysqld--defaults-file=/etc/my2.cnf

# mysqladmin -S/mysql/mysql.sock -u root -p password		<---- changing root password
Enter password:
New password:
Confirm new password:

# mysql -u root -psauras -S/mysql/mysql.sock  <---- Specify the socket file to be sure to connect to desired instance  

mysql>

mysql> show variables like 'port';

| Variable_name | Value |
 port	| 3307
 
mysql> prompt 2>			<--- We give a prompt to identify the instance we connect to

PROMPT set to '2>'
2>

NB : to connect to default instance running :

# mysql -u root -psauras

mysql> show variables like 'port';

| Variable_name | Value |
 port	| 3306
 
mysql> prompt 1>			<--- We give a prompt to identify the instance we connect to

PROMPT set to '1>'
1>
1>show databases;

| Database
	information_schema
	dbl
	db2
	mysql
	performance_schema
	sys

1>use dbl

1>show tables;
	test

1>use db2

1>show tables;
	testable

# mysqldump -u root -psauras db1 > /backup/db1.sql							<-- Backup only database : db1 in defaut mysql instance (no socket used)
# mysqldump -u root -psauras --databases db1 db2 > /backup/multidbs.sql		<-- Backup databases : db1, db2
# mysqldump -u root -psauras --all-database > /backup/alldbs.sql 			<-- Backup all databases

# ls /backup
alldbs.sql 	  db1.sql 	multidbs.sql


*** Restore db1 on new mysql instance 

We need to create db1 in order to proceed with restore of db1 on this instance

2>show databases;

| Database
	information_schema 
	mysql
	performance_schema 
	sys

2>create database dbl;

# mysql -u root -psauras - S/mysql/mysql.sock dbl < /backup/db1.sql 	<-- Restore using backup file : db1.sql

Check on new instance :

2>use dbl
Database changed

2>show tables;

| Tables_in_dbl |
	test

*** Restore using backup for multi dbs

2>drop database dbl;

# mysql -u root -psauras - S/mysql/mysql.sock < /backup/multidbs.sql

2>show databases;

| Database
	information_schema 
	db1
	db2
	mysql
	performance_schema 
	sys
	
NB : If you want to restore all dbs in a dumpfile, no need to create the db before restore
	The result would be the same with dumpfile alldbs containing backups of db1 and db2
	
**** Restore only a db from dumpfile of multiple dbs

2>drop database db2;
2>drop database db1;

2>create database db1;		<-- Create a blank database db1 before restoring db1

# mysql -u root -psauras - S/mysql/mysql.sock-one-database dbl < /backup/alldbs.sql

2>show databases;

| Database
	information_schema
	dbl
	db2						<-- db2 also is restored even not specified
	mysql
	performance_schema
	sys

2>use db2
Database changed

2>show tables;				<-- db2 restored with no tables
Empty set (0.00 sec)

2>

NB : Using mysql to perform a backup of database does not perform a complete backup of database, instead it backups 
tables and objects in the database. Use mysqldump for a complete backup

# mysqldump -u root -psauras --routines --events--triggers dbl>/backup/db1_full.sql


----------- Point in time Recovery

# mysql -u root -psauras							<-- Default mysql instance

mysql> show databases;

| Database
	information_schema
	dbl
	mysql
	performance_schema
	sys

mysql> use db1;
mysql> show tables;
| Tables_in_db1 |
	test

# mysql -u root -psauras - S/mysql/mysql.sock 		<-- Second mysql instance with other socket file specified

mysql> insert into test values (1), (2),(3); 
mysql> select * from test;

| id
	1
	2
	3

Backup db1 :

# mysqldump -u root -psauras db1 >/backup/db1.sql

# cat /backup/db1.sql  		<-- See backup containt details

After backup, insert and delete data in db1 :

mysql> insert into test values (4),(5),(6); 
mysql> select * from test; 
 id
	1
	2
	3
	4
	5
	6

mysql> delete from test;

Using bin log to restore db1 with last inserted data in second mysql instqnce:

mysql> show master status;		<--- See bin file used

File				| Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set
mysqll-bin.000017      1484 

Create db1 in second instance :

2> create database db1;

Restore from backup after 3 inserted data :

# mysql -u root -psauras - S/mysql/mysql.sock dbl < /backup/db1.sql

2> use dbl;
Database changed 

2> show tables;
| Tables_in_db1 |
	test

2> select * from test;

id
	1
	2
	3

Check the content of the bin log file, in a readable format using mysqlbinlog :

# mysqlbinlog /var/lib/mysql/mysqll-bin.000017


BEGIN
/*!*/;
# at 1079        					<---- Last inserted command started at this position 
#200229 2:18:10 server id 1 end_log_pos 1125 CRC32 0x55a4f017  Table_map: dbl`.`test mapped to number 112
# at 1125
#200229 2:18:10 server id 1 end_log_pos 1175 CRC32 0x840619a3	Write rows: table id 112 flags: STMT_END_F

............

BEGIN
/*!*/;
# at 1342							<---- Delete command started at this position 
200229 2:18:29 server id 1 end_log_pos 1388 CRC32 0x5bb2eaea 	Table_map: `dbl` test mapped to number 112
# at 1388
#200229 2:18:29 server id 1 end_log_pos 1453 CRC32 0x9ab1c124		Delete_rows: table id 112  flags: STMT END F


---> We want data between positions  1079 and 1342

Dump bin log data during that period in a file called /backup/binlog.sql:

# mysqlbinlog /var/lib/mysql/mysql1-bin.000017 --start-position 1079 --stop-position 1342-skip-gtids >/backup/binlog.sql

We have 2 ways to restore incremental data : using OS or mysql terminal

Using mysql terminal :

mysql> source /backup/binlog.sql			<--- Restores and applied incremental insert in db

mysql> select * from test; 
 id
	1
	2
	3
	4
	5
	6

---------- Managing Users --------------

# mysql -u root -psauras 

Check current users :
mysql> select user from mysql.user\G  

user: mysql.session
user: mysql.sys
user: root

mysql>

Create a user :
mysql> create user admin@'%' identified by 'welcome' password expire;

When creating a user, you specify :
	@'%' 		: tout specify user can connect from any host
	@localhost 	: user can connect ony locally
	@192.168.%	: user can connect only from this host ip range
	
	expire 		: force user to change password at 1st connection

To grant permission to connect to any object :

mysql> grant usage on *.* to admin@'%';   

For DML actions, object name should be specified

To check permission granted :

mysql> show grants for admin@'%';

Grants for admin@%

	 GRANT USAGE ON *.* TO 'admin'@'%'

Connecting with the user :

# mysql -u admin -pwelcome

mysql> show databases;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.

mysql> Alter user user() identified by 'sauras'; 		<--- We used user() function which contains current user 
														instead of specifying the username
mysql> show databases;

Database
 information_schema 

*** Grant select on table to admin user as mysql user:

mysql> grant select on dbl.test to admin@'%';

*** Now connect as admin user : 

mysql> show databases;

Database
 information_schema
 dbl

mysql> use dbl
Database changed 

mysql> show tables;

| Tables_in_dbl |
	test

To grant insert on table to admin user :

mysql> grant INSERT on db1.test to admin@'%' WITH grant option;   <-- WITH grant option allows to grant also insert perm to another user

To revoke a permission: 

mysql> REVOKE select on dbl.test from admin@'%';

To grant all privs :

GRANT ALL PRIVILEGES ON .* to user admin@'%';

See more details on privs at : https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html



create user admin1@'%' identified by 'welcome' PASSWORD EXPIRE PASSWORD EXPIRE INTERVAL 90 DAY; <-- Password expires every 90 days at 1st expires after 90 days

ALTER USER admin1@'%' WITH MAX QUERIES_PER_HOUR 50 MAX UPDATES_PER HOUR 50; <-- limits user to not perform more than 50 queries or 50 updates per hour















